#!/usr/bin/env python3
# encoding=UTF-8

# Copyright Â© 2018-2022 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import argparse
import functools
import http.client
import os
import re
import signal
import sys
import urllib.request

0_0  # Python >= 3.6 is required

ap = argparse.ArgumentParser()
ap.add_argument('project', metavar='PROJECT', nargs='?')
options = ap.parse_args()

urlquote = functools.partial(urllib.parse.quote, safe='')

def main():
    if options.project is not None:
        proj = options.project
        url = f'https://pypi.org/simple/{urlquote(proj)}/'
        try:
            fp = urllib.request.urlopen(url)
        except urllib.error.HTTPError as exc:
            if exc.code == http.client.NOT_FOUND:
                msg = f'{ap.prog}: {proj}: not found'
                print(msg, file=sys.stderr)
                sys.exit(1)
            else:
                raise
        else:
            with fp:
                proj = fp.url.split('/')[-2]
                print(proj)
    else:
        search_for_a = re.compile(br'<a href="[^>]*">([^<]+)</a>').search
        with urllib.request.urlopen('https://pypi.org/simple/') as fp:
            for line in fp:
                match = search_for_a(line)
                if match is None:
                    continue
                project = match.group(1)
                project = project.decode('ASCII')
                print(project)

try:
    main()
except BrokenPipeError:
    signal.signal(signal.SIGPIPE, signal.SIG_DFL)
    os.kill(os.getpid(), signal.SIGPIPE)
    raise

# vim:ts=4 sts=4 sw=4 et
